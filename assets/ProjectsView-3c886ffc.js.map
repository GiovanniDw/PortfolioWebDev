{"version":3,"file":"ProjectsView-3c886ffc.js","sources":["../../src/stores/repos.ts","../../src/views/ProjectsView.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport { useFetch } from '@vueuse/core'\n// import { requestData } from \"../services/requestData\";\n\n// export default getGithubUserData();\n\nexport const useReposStore = defineStore('repos', () => {\n  const username = ref('GiovanniDw')\n  const name = ref('Giovanni')\n  const url = ref(`https://api.github.com/users/${username.value}/repos`)\n\n  const { isFetching, error, data } = useFetch(url.value).get().json()\n  console.log(data.value)\n  // const repos = ref(data.value)\n  return { username, name, url, data }\n})\n","<script setup>\nimport RepoItem from '@/components/RepoItem.vue'\n\nimport { useReposStore } from '@/stores/repos'\nimport { storeToRefs } from 'pinia'\nconst store = useReposStore()\nconst { data } = storeToRefs(store)\n</script>\n\n<template>\n  <main class=\"project\">\n    <section>\n      <h1>Projects</h1>\n      <div v-if=\"data\" class=\"grid\">\n        <RepoItem v-for=\"repo in data\" :data=\"repo\" :key=\"repo.id\" />\n      </div>\n    </section>\n  </main>\n</template>\n\n<style lang=\"scss\">\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(25rem, 1fr));\n  gap: 1em;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOa,MAAA,gBAAgB,YAAY,SAAS,MAAM;AAChD,QAAA,WAAW,IAAI,YAAY;AAC3B,QAAA,OAAO,IAAI,UAAU;AAC3B,QAAM,MAAM,IAAI,gCAAgC,SAAS,aAAa;AAEhE,QAAA,EAAE,YAAY,OAAO,SAAS,SAAS,IAAI,KAAK,EAAE,IAAI,EAAE,KAAK;AAC3D,UAAA,IAAI,KAAK,KAAK;AAEtB,SAAO,EAAE,UAAU,MAAM,KAAK,KAAK;AACrC,CAAC;;;;;;;;;;;;;;;;;ACXD,UAAM,QAAQ,cAAe;AAC7B,UAAM,EAAE,KAAI,IAAK,YAAY,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;"}